% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/menuOutput.R
\name{renderControlMenu}
\alias{renderControlMenu}
\title{render ControlMenu}
\description{Create dynamic right-side controlmenu output (server side)}
\usage{
renderControlMenu(expr, env = parent.frame(), quoted = FALSE,
  outputArgs = list())
}
\arguments{
\item{expr}{An expression that returns a Shiny tag object, \code{\link{HTML}},
or a list of such objects.}

\item{env}{The environment in which to evaluate \code{expr}.}

\item{quoted}{Is \code{expr} a quoted expression (with \code{quote()})? This
is useful if you want to save an expression in a variable.}

\item{outputArgs}{A list of arguments to be passed through to the implicit
call to \code{\link{uiOutput}} when \code{renderUI} is used in an
interactive R Markdown document.}
}
\details{
This is simply an alias for \code{\link[shiny]{renderUI}} which
puts replaces contents of control menu
}
\examples{
## Only run these examples in interactive R sessions

if (interactive()) {
## Dynamically render controlmenu sidebar items with other shiny controls (sliders)

library(shiny)

ui <- dashboardPage(
  dashboardHeader(
    title = "Dynamic menus",
    # this parameter is required to display icon that triggers control-sidebar js
    controlsidebar = TRUE
  ),
  dashboardSidebar(),
  dashboardBody(
    fluidRow(
      box(
        title = "Parameters",
        sliderInput("slider1", "alpha", 1, 100, 50),
        sliderInput("slider2", "beta", 1, 100, 50),
        sliderInput("slider3", "gamma", 1, 100, 50)
      )
    )
  ),
  dashboardControlSidebar(
    # display server-side control-sidebar menu output
    controlMenuOutput("controlMenu")
  )

)

server <- function(input, output) {
  # Code to connect UI controls to controlsidebar menu dynamically
  output$controlMenu <- renderControlMenu({
    controlsidebarMenu( controlsidebarMenuItem(p(input$slider1),headerText="alpha"),
                       controlsidebarMenuItem(p(input$slider2),headerText="beta"),
                       controlsidebarMenuItem(p(input$slider3),headerText="gamma"),
                       headerText = "Parameters")
  })

}

shinyApp(ui, server)
}
}
\seealso{
\code{\link{controlMenuOutput}} for the corresponding client side function
  and examples.

Other menu outputs: \code{\link{controlMenuOutput}},
  \code{\link{dropdownMenuOutput}},
  \code{\link{menuItemOutput}}, \code{\link{menuOutput}},
  \code{\link{renderMenu}}, \code{\link{sidebarMenuOutput}}
}
